require 'pleasegpt'
require 'pleasegpt/cli'
require_relative '../../lib/pleasegpt/cli'

RSpec.describe PleaseGPT do
  describe 'gem configuration' do
    it 'receives an OpenAI API key from the environment variables saved in the computer' do
      expect(PleaseGPT::Api.api_key).to eq ENV['OPENAI_API_KEY']
    end
  end

  describe '#generate_text' do
    it 'returns generated text' do
      expect(PleaseGPT::Api.generate_text('test')).to be_a(String)
    end

    it 'raises an error if the OpenAI API request returns an empty response' do
      text = 'empty response'
      allow_any_instance_of(OpenAI::Client).to receive(:completions)
        .and_return(OpenAI::Completion.new(choices: []))
      expect { PleaseGPT::Api.generate_text(text) }.to raise_error(PleaseGPT::Error, 'OpenAI API request returned empty response')
    end

    it 'raises an error if the OpenAI API request returns nil text' do
      text = 'nil text'
      allow_any_instance_of(OpenAI::Client).to receive(:completions)
        .and_return(OpenAI::Completion.new(choices: [OpenAI::Choice.new(text: nil)]))
      expect { PleaseGPT::Api.generate_text(text) }.to raise_error(PleaseGPT::Error, 'OpenAI API request returned nil text')
    end
  end

  describe 'console interface' do
    before do
      allow(PleaseGPT::Api).to receive(:generate_text).and_return('Text generated by the AI')
    end

    it 'responds to the input "pleasegpt how can I fetch a repository from GitHub?"' do
      expect { PleaseGPT::CLI.start(['how can I fetch a repository from GitHub?']) }.to output(/pleasegpt> Text generated by the AI\n/).to_stdout
    end
  end
end
